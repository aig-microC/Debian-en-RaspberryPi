Procedimiento para instalar *Debian* "nativo" en una *Raspberry Pi 4 o 400*
===========================================================================

Lo primero que hay que hacer es descargar la imagen básica desde el enlace https://raspi.debian.net/tested-images/. Yo elijo la imagen de la distribución *testing*  correspondiente a la *Familia 4*, que sirve para la *Raspberry Pi 4 o 400*. Hay dos líneas, aparentemente una para la *RPi 4* y otra para la *RPi 400*, pero el fichero a descargar es el mismo. Sirven para diferenciar las dos versiones en cuanto a pruebas fallidas y otros problemas (*Failed tests or other issues*) que pueden ser diferentes en los dos modelos.

Una vez descargada hay que escribirla en una tarjeta *microSD*. Para ello utilizaremos, si tenemos instalado el *Raspberry Pi OS* en una *RPi 4 0 400* el programa rpi-imager_ que que está disponible en este sistema operativo o si estamos en un sistema *Debian* se puede compilar e instalar siguiendo las instrucciones que se pueden ver en https://github.com/raspberrypi/rpi-imager.

.. figure:: imágenes/rpi-imager.png
   :scale: 80 %
   :align: center
   
   rpi-imager. Programa para copiar una imagen del SO
   
.. _rpi-imager: https://www.raspberrypi.com/software/
   
Seleccionamos *CHOSE OS* y vamos al final para seleccionar "**Use custom**, *Select a custom .img from your computer*" y buscamos la imagen que acabamos de descargar. A continuación seleccionamos "*CHOSE STORAGE*" y seleccionamos la memoria *microSD*. Y por último pulsamos "*WRITE*" para escribir la imagen en la tarjeta y terminar.

También lo podemos hacer utilizando la línea de comandos, con el procedimiento que se describe en https://raspi.debian.net/how-to-image/ y que básicamente consite en, situándonos en el subdirectorio donde hayamos descargado la imagen, teclear:

.. code-block:: bash
   :linenos:
   
   $ xzcat fichero_imagen_descargado.img.xz | sudo dd of=/dev/{indicador de la tarjeta SD} bs=64k oflag=dsync status=progress
   
.. warning::
   ¡Asegúrate de tener el indicador correcto para la tarjeta SD! (¡corres el riesgo de perder el disco de tu sistema si no identificas bien la tarjeta del nuevo sistema operativo!)
   
Una manera fácil de ver cual es el dispositivo al que está conectada nuestra tarjeta *microSD* es el siguiente:

a. Con la tarjeta *microSD* desconectada del ordenador teclear el comando `lsblk` y observar que elementos hay en nuestro sistema debajo de */dev/*. Por ejemplo en mi sistema obtengo lo siguiente:

.. code-block:: bash
   :linenos:

    angel@debianHP:~$ lsblk
    NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
    sda           8:0    0   1,8T  0 disk 
    ├─sda1        8:1    0   1,8T  0 part /
    ├─sda2        8:2    0     1K  0 part 
    └─sda5        8:5    0   975M  0 part [SWAP]
    nvme0n1     259:0    0 238,5G  0 disk 
    ├─nvme0n1p1 259:1    0   260M  0 part 
    ├─nvme0n1p2 259:2    0    16M  0 part 
    ├─nvme0n1p3 259:3    0 237,2G  0 part 
    └─nvme0n1p4 259:4    0   980M  0 part 
    angel@debianHP:~$ 

b. Y, a continuación, conectamos nuestra tarjeta *microSD*, repetimos el comando y vemos la diferencia,

.. code-block:: bash
   :linenos:
   
    angel@debianHP:~$ lsblk
    NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
    sda           8:0    0   1,8T  0 disk 
    ├─sda1        8:1    0   1,8T  0 part /
    ├─sda2        8:2    0     1K  0 part 
    └─sda5        8:5    0   975M  0 part [SWAP]
    mmcblk0     179:0    0  29,7G  0 disk 
    └─mmcblk0p1 179:1    0  29,7G  0 part /media/angel/ext4-MICROSD
    nvme0n1     259:0    0 238,5G  0 disk 
    ├─nvme0n1p1 259:1    0   260M  0 part 
    ├─nvme0n1p2 259:2    0    16M  0 part 
    ├─nvme0n1p3 259:3    0 237,2G  0 part 
    └─nvme0n1p4 259:4    0   980M  0 part 
    angel@debianHP:~$ 

Vemos que el dispositivo que hay que utilizar es `/dev/mmcblk0`. Podeis ver que yo tenía formateada la tarjeta *microSD* como ext4, como indica la etiqueta con la que la creé.

.. Note::
   Puede ser conveniente que, si la tarjeta *microSD* no es nueva, la formatees previamente. Lo puedes hacer con un interfaz gráfico con un programa como *GParted*, o desde la linea de comandos tal como se muestra a continuación. Si tienes instalados los paquetes *parted* *dosfstools* y  *mtools* puedes ignorar las dos primeras líneas.
   
.. code-block:: bash
   :linenos:
   
   $ sudo apt update
   $ sudo apt install parted dosfstools mtools
   $ sudo umount /media/angel/ext4-MICROSD
   $ sudo parted /dev/mmcblk0 --script -- mklabel msdos
   $ sudo parted /dev/mmcblk0 --script -- mkpart primary fat32 1MiB 100%
   $ sudo mkfs.vfat -F32 /dev/mmcblk0
   $ sudo mlabel -i /dev/mmcblk0 ::mietiqueta


Configuración del sistema operativo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Una vez grabado el *SO* en la *microSD* la insertamos en nuestra *RPi* y esperamos a que aparezca el *login* de entrada al sistema. Entramos con el usuario *root* y veremos que **no** nos pide contraseña. Los pasos para configurar nuestro sistema en español son los siguientes:

1. Actualización del sistema

.. code-block:: bash
   :linenos:
   
   # apt update
   # apt update
   # apt upgrade 

.. Note::
   La primera vez que tecleas *apt update* el reloj del sistema no está sincronizado y produce un error de repositorio antiguo. La segunda vez ya lo acepta sin error.
      
Si al hacer la actualización (*apt upgrade*) hace preguntas contesta la respuesta por defecto (*Intro*).

2. Añadir una *password* para el usuario *root*.

.. code-block:: bash
   :linenos:
   
   # passwd
   New password: 'Tu_password_para_root'
   Retype new password: 'Tu_password_para_root'
   
3. Instalamos el programa *sudo* que permite a un usuario normal tener los privilegios de *root*.

.. code-block:: bash
   :linenos:
   
   # apt install sudo

4. Creamos un usuario nuevo. Yo voy a crear, como ejemplo, el usuario *pi*. Te pedirá el nombre del usuario y su contraseña. El resto de los campos que solicita son opcionales (yo los dejo en blanco pulsando *Intro*) y al final pedirá confirmación.

.. code-block:: bash
   :linenos:
   
   # adduser pi
   
5. Para que *pi* pertenezca al grupo *sudo* hacemos lo siguiente:
 
.. code-block:: bash
   :linenos:
   
   # usermod -aG sudo pi
   
Aquí tenemos un problema. Todavía no tenemos instalado el teclado y las *Locales* en español, por lo que el guión "-" no está en la tecla de nuestro teclado. Podemos ver en https://es.wikipedia.org/wiki/Distribuci%C3%B3n_del_teclado que el guión en el teclado de Estados Unidos está en la tercera tecla, por la derecha, de la fila de números y símbolos del teclado y que en el teclado español se corresponde con la tecla "\'" (comilla simple) la que tiene el "?" cuando pulsamos la tecla *Shift* o *Mayúsculas*.

6. Ahora podemos reiniciar el sistema y entrar como usuario *root* o *pi* con su contraseña correspondiente.

.. code-block:: bash
   :linenos:
   
   # reboot

Cuando arranque de nuevo entramos como usuario *pi* y su contraseña
  
.. code-block:: bash
   :linenos:
   
   login: pi
   Password: 
   
7. A continuación instalamos las *locales*. Al utilizar *sudo* nos pedirá la password de *pi* para proceder.

.. code-block:: bash
   :linenos:
   
   $ sudo apt install locales
   $ sudo dpkg-reconfigure locales

Y seleccionaremos,  con *la barra de espacio*, dos: *en_US.UTF8 UTF-8* y *es_ES.UTF8 UTF-8*. Pulsamos *<tabular>* y *ok* y cuando nos pregunte que *locale* queremos que sea nuestra local por defecto seleccionamos *es_ES.UTF-8*. Con esto el teclado todavía no está configurado en español. 

8. Configuración del teclado en español. Para ello hacemos lo siguiente:

.. code-block:: bash
   :linenos:
   
   $ sudo apt install keyboard-configuration
   
.. note::
   Todavía no tenemos configurado el teclado en español por lo que deberemos usar nuevamente la tecla "\'".
   
En la primera pantalla seleccionamos *Other*, pulsamos *<tabular>*, *ok* e *Intro*. De la lista que aparece seleccionamos *Spanish* y *ok* y, luego, *Spanish - Spanish (Windows)* y *ok*.

9. Ahora volvemos a reiniciar el sistema y entrar como usuario *pi* con su contraseña correspondiente.

.. code-block:: bash
   :linenos:
   
   $ sudo reboot

10. A continuación instalamos los paquetes necesarios para la consola:
 
.. code-block:: bash
   :linenos:
   
   $ sudo apt install gpm console-common console-data console-setup
   
.. note::
   El paquete *gpm* es para poder usar el ratón en la consola.   

Veremos que ahora la *Configuración de console-data* ya nos aparece en español, aunque el teclado todavía no funciona en español. 

Seleccionamos la opción *Elegir el mapa de teclado de la lista completa* y seleccionamos *<Aceptar>* y seleccionamos *pc / qwerty Spanish / Standard / Standard* y  *<Aceptar>* ya tendremos el teclado en español. Verás, además, que si mueves el ratón el cursor se moverá por la pantalla.

11. Este paso es opcional. En la consola el tipo de caracteres (*fuentes*) que se han instalado es *Fixed* que tiene una mejor cobertura para los *scripts* internacionales. A mí, particularmente me gusta más los tipos *VGA*. En cualquier caso si deseas configurar los tipos de caracteres de la consola puedes hacer:

.. code-block:: bash
   :linenos:
   
   $ sudo dpkg-reconfigure console-settup
   
.. Note::
   Ahora ya sí, el guión "-" está en la tecla de nuestro teclado.
 
Seleccionar *UTF-8* y luego *#Latino1 y Latino5 - Europa Occidental y lenguas turcas* y ahora el tipo que desees. Yo elijo *VGA* como he comentado anteriormente y un tamaño de *8x16*. Verás que en este momento la consola presenta los tipos *VGA*.

12. A continuación vamos a instalar el sistema básico

.. code-block:: bash
   :linenos:
   
   $ sudo tasksel
   
Y seleccionamos mediante la *barra de espacio* *Debian desktop environment* y el escritorio que más te guste, teniendo en cuenta que el escritorio que elijas puede consumir muchos recursos. Yo elijo *LXQT* porque es el *original* del que utiliza *Raspberry Pi OS* y sobre todo porque consume muy pocos recursos. Este paso dura bastante tiempo y es posible que la pantalla se desconfigure. No te preocupes y deja que siga hasta que termine.

  
13. Cambiamos la hora a nuestra hora local. Para ello tecleamos *timedatectl list-timezones* y buscamos cual es nuestra zona. En mi caso *Europa/Madrid* y hacemos

.. code-block:: bash
   :linenos:
   
   $ sudo timedatectl set-timezone Europe/Madrid
   $ date

Y verás que la hora ya está actualizada a tu zona.

14. Ya solo queda reiniciar el sistema para tener un escritorio en nuestra *RPi*.

.. code-block:: bash
   :linenos:
   
   $ sudo reboot

15. Entramos en nuestro nuevo sistema con nuestro usuario y contraseña. Normalmente tardará unos minutos, mientras se configura, hasta que se vea el escritorio listo para trabajar y, por último, abrimos un terminal y actualizamos y limpiamos nuestro sistema.

.. code-block:: bash
   :linenos:

   $ sudo apt update && sudo apt upgrade && sudo apt full-upgrade && sudo apt clean && sudo apt autoremove

Ahora ya solo queda configurar el escritorio como más te guste.


